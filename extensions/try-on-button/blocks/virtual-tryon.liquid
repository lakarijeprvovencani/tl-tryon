{% comment %}
  Virtual Try-On Widget Block
  This block displays a virtual try-on form and product information
{% endcomment %}

{% comment %} No API keys needed - using server environment variables {% endcomment %}
{% assign widget_title = block.settings.widget_title | default: 'Virtual Try-On' %}
{% assign widget_description = block.settings.widget_description | default: 'Uploaduj svoju sliku da vidiÅ¡ kako ti stoji ovaj proizvod!' %}

<div id="tl-vto" class="virtual-tryon-widget" 
     data-product-id="{{ product.id }}"
     data-product-title="{{ product.title | escape }}"
     data-product-image="{{ product.featured_image | image_url }}"
     data-variant-id="{{ product.selected_or_first_available_variant.id }}">
  
  <div class="tryon-container">
    <h3 class="tryon-title">{{ widget_title }}</h3>
    
    {% if block.settings.show_description %}
      <p class="tryon-description">{{ widget_description }}</p>
    {% endif %}
    
    <div class="tryon-form">
      <div class="upload-section">
        <div class="upload-row">
          <div class="upload-column">
            <label for="person-upload-{{ block.id }}" class="upload-label">
              <span class="upload-icon">ðŸ‘¤</span>
              <span class="upload-text">Uploaduj svoju sliku</span>
            </label>
            <input type="file" 
                   id="person-upload-{{ block.id }}" 
                   accept="image/*" 
                   class="photo-input" 
                   style="display: none;">
          </div>
          
          <div class="upload-column">
            <label for="garment-upload-{{ block.id }}" class="upload-label">
              <span class="upload-icon">ðŸ‘•</span>
              <span class="upload-text">Uploaduj sliku garderobe (opciono)</span>
            </label>
            <input type="file" 
                   id="garment-upload-{{ block.id }}" 
                   accept="image/*" 
                   class="photo-input" 
                   style="display: none;">
          </div>
        </div>
      </div>
      
      <div class="preview-section" style="display: none;">
        <div class="preview-images">
          <div class="preview-item">
            <label>VaÅ¡a slika:</label>
            <img id="person-preview-{{ block.id }}" class="preview-image" alt="Person preview" width="200" height="200">
          </div>
          <div class="preview-item" id="garment-preview-container-{{ block.id }}" style="display: none;">
            <label>Garderoba:</label>
            <img id="garment-preview-{{ block.id }}" class="preview-image" alt="Garment preview" width="200" height="200">
          </div>
        </div>
        <button type="button" class="try-on-btn" onclick="startVirtualTryOn('{{ block.id }}')">
          Isprobaj
        </button>
      </div>
      
      <div class="result-section" style="display: none;">
        <div class="result-container">
          <img id="result-image-{{ block.id }}" class="result-image" alt="Virtual try-on result" width="400" height="500">
          <div class="result-actions">
            <button type="button" class="download-btn" onclick="downloadResult('{{ block.id }}')">
              Preuzmi rezultat
            </button>
            <button type="button" class="reset-btn" onclick="resetTryOn('{{ block.id }}')">
              Probaj ponovo
            </button>
          </div>
        </div>
      </div>
    </div>
    
    {% if block.settings.show_product_info %}
      <div class="product-info">
        <h4>{{ product.title }}</h4>
        <img src="{{ product.featured_image | image_url: width: 100 }}" alt="{{ product.title }}" class="product-thumbnail" width="100" height="100">
        <p class="product-price">{{ product.price | money }}</p>
      </div>
    {% endif %}
  </div>
</div>

<style>
.virtual-tryon-widget {
  max-width: 600px;
  margin: 2rem auto;
  padding: 1.5rem;
  border: 2px solid #e1e5e9;
  border-radius: 12px;
  background: #ffffff;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.tryon-title {
  text-align: center;
  color: #333;
  margin-bottom: 1rem;
  font-size: 1.5rem;
}

.tryon-description {
  text-align: center;
  color: #666;
  margin-bottom: 2rem;
}

.upload-section {
  text-align: center;
  margin-bottom: 2rem;
}

.upload-row {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

.upload-column {
  flex: 1;
  min-width: 200px;
  max-width: 250px;
}

.upload-label {
  display: inline-block;
  padding: 1rem 2rem;
  background: #007cba;
  color: white;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
}

.upload-label:hover {
  background: #005a87;
}

.upload-icon {
  font-size: 1.5rem;
  margin-right: 0.5rem;
}

.preview-section {
  text-align: center;
  margin-bottom: 2rem;
}

.preview-images {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}

.preview-item {
  text-align: center;
}

.preview-item label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: bold;
  color: #333;
}

.preview-image {
  max-width: 300px;
  max-height: 300px;
  border-radius: 8px;
  margin-bottom: 1rem;
}

.try-on-btn {
  padding: 0.75rem 1.5rem;
  background: #28a745;
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 1rem;
}

.try-on-btn:hover {
  background: #218838;
}

.result-section {
  text-align: center;
}

.result-image {
  max-width: 100%;
  border-radius: 8px;
  margin-bottom: 1rem;
}

.result-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.download-btn, .reset-btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.download-btn {
  background: #17a2b8;
  color: white;
}

.reset-btn {
  background: #6c757d;
  color: white;
}

.product-info {
  margin-top: 2rem;
  padding-top: 1rem;
  border-top: 1px solid #e1e5e9;
  text-align: center;
}

.product-thumbnail {
  border-radius: 4px;
  margin: 0.5rem 0;
}

.product-price {
  font-weight: bold;
  color: #28a745;
  font-size: 1.1rem;
}
</style>

<script>
// Function to initialize the widget
function initializeWidget() {
  // Konfiguracija widget-a
  const el = document.getElementById('tl-vto');
  if (el) {
    const cfg = {
      productId: el.dataset.productId,
      title: el.dataset.productTitle,
      image: el.dataset.productImage,
    };
    console.log("Virtual Try-On config:", cfg);
  }
  
  const blockId = '{{ block.id }}';
  const personFileInput = document.getElementById(`person-upload-${blockId}`);
  const garmentFileInput = document.getElementById(`garment-upload-${blockId}`);
  const previewSection = document.querySelector(`.preview-section`);
  const resultSection = document.querySelector(`.result-section`);
  
  // Handle person image upload
  personFileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const previewImg = document.getElementById(`person-preview-${blockId}`);
        previewImg.src = e.target.result;
        previewSection.style.display = 'block';
      };
      reader.readAsDataURL(file);
    }
  });
  
  // Handle garment image upload
  garmentFileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const previewImg = document.getElementById(`garment-preview-${blockId}`);
        previewImg.src = e.target.result;
        document.getElementById(`garment-preview-container-${blockId}`).style.display = 'block';
      };
      reader.readAsDataURL(file);
    }
  });
}

// Initialize on DOM ready
document.addEventListener('DOMContentLoaded', initializeWidget);

// Initialize on Shopify section load
document.addEventListener('shopify:section:load', initializeWidget);

// Initialize on Shopify block select
document.addEventListener('shopify:block:select', initializeWidget);

function startVirtualTryOn(blockId) {
  const widget = document.querySelector(`[data-product-id]`);
  const productId = widget.dataset.productId;
  const variantId = widget.dataset.variantId;
  
  const personFileInput = document.getElementById(`person-upload-${blockId}`);
  const garmentFileInput = document.getElementById(`garment-upload-${blockId}`);
  
  const personFile = personFileInput.files[0];
  
  if (!personFile) {
    alert('Molimo uploadujte svoju sliku prvo.');
    return;
  }
  
  // Show loading state
  const tryOnBtn = document.querySelector('.try-on-btn');
  const originalText = tryOnBtn.textContent;
  tryOnBtn.textContent = 'ObraÄ‘ujem...';
  tryOnBtn.disabled = true;
  
  // Create FormData for multipart upload
  const formData = new FormData();
  formData.append('personImage', personFile);
  
  // Add garment image if provided
  const garmentFile = garmentFileInput.files[0];
  if (garmentFile) {
    formData.append('garmentImage', garmentFile);
  }
  
  // Log product context for debugging
  console.log('Product context:', {
    productId: productId,
    variantId: variantId,
    title: widget.dataset.productTitle,
    image: widget.dataset.productImage
  });
  
  // Call Netlify function
  const endpoint = 'https://quiet-maamoul-71d10e.netlify.app/.netlify/functions/tryon';
  
  // Convert FormData to base64 for Netlify function
  const personFile = personFileInput.files[0];
  const garmentFile = garmentFileInput.files[0];
  
  const reader = new FileReader();
  reader.onload = function(e) {
    const personBase64 = e.target.result.split(',')[1]; // Remove data:image/...;base64, prefix
    
    let garmentBase64 = null;
    if (garmentFile) {
      const garmentReader = new FileReader();
      garmentReader.onload = function(e2) {
        garmentBase64 = e2.target.result.split(',')[1];
        sendToNetlify(personBase64, garmentBase64);
      };
      garmentReader.readAsDataURL(garmentFile);
    } else {
      sendToNetlify(personBase64, null);
    }
  };
  
  function sendToNetlify(personBase64, garmentBase64) {
    const payload = {
      personImage: personBase64,
      garmentImage: garmentBase64
    };
    
    fetch(endpoint, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload)
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(errorData => {
          throw new Error(errorData.error || `HTTP ${response.status}`);
        });
      }
      return response.text(); // Get base64 string
    })
    .then(base64Data => {
      console.log('Generated image base64 length:', base64Data.length);
      
      // Create data URL for the generated image
      const imageUrl = `data:image/png;base64,${base64Data}`;
      const resultImg = document.getElementById(`result-image-${blockId}`);
      resultImg.src = imageUrl;
      
      // Show result section
      document.querySelector('.result-section').style.display = 'block';
      document.querySelector('.preview-section').style.display = 'none';
      
      // Reset button state
      tryOnBtn.textContent = originalText;
      tryOnBtn.disabled = false;
    })
    .catch(error => {
      console.error('Error:', error);
      
      // Show inline error message
      const errorDiv = document.createElement('div');
      errorDiv.className = 'error-message';
      errorDiv.textContent = `GreÅ¡ka: ${error.message}`;
      errorDiv.style.color = 'red';
      errorDiv.style.marginTop = '10px';
      errorDiv.style.fontSize = '14px';
      
      // Insert error message after the button
      tryOnBtn.parentNode.insertBefore(errorDiv, tryOnBtn.nextSibling);
      
      // Remove error message after 5 seconds
      setTimeout(() => {
        if (errorDiv.parentNode) {
          errorDiv.parentNode.removeChild(errorDiv);
        }
      }, 5000);
      
      // Reset button state
      tryOnBtn.textContent = originalText;
      tryOnBtn.disabled = false;
    });
}

function downloadResult(blockId) {
  const resultImg = document.getElementById(`result-image-${blockId}`);
  const link = document.createElement('a');
  link.download = 'virtual-tryon-result.png';
  link.href = resultImg.src;
  link.click();
}

function resetTryOn(blockId) {
  const personFileInput = document.getElementById(`person-upload-${blockId}`);
  const garmentFileInput = document.getElementById(`garment-upload-${blockId}`);
  const previewSection = document.querySelector(`.preview-section`);
  const resultSection = document.querySelector(`.result-section`);
  const garmentPreviewContainer = document.getElementById(`garment-preview-container-${blockId}`);
  
  personFileInput.value = '';
  garmentFileInput.value = '';
  previewSection.style.display = 'none';
  resultSection.style.display = 'none';
  garmentPreviewContainer.style.display = 'none';
  
  // Clear any error messages
  const errorMessages = document.querySelectorAll('.error-message');
  errorMessages.forEach(msg => msg.remove());
}
</script>

{% schema %}
{
  "name": "Virtual Try-On Widget",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "widget_title",
      "label": "Widget Title",
      "default": "Virtual Try-On"
    },
    {
      "type": "textarea",
      "id": "widget_description",
      "label": "Widget Description",
      "default": "Uploaduj svoju sliku da vidiÅ¡ kako ti stoji ovaj proizvod!"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show Description",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_info",
      "label": "Show Product Information",
      "default": true
    }
  ]
}
{% endschema %}
